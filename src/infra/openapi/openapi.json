{
  "openapi": "3.0.0",
  "info": {
    "title": "PosTech-3SOAT",
    "version": "1.0.0",
    "description": "Tech Challenge."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/clients": {
      "post": {
        "tags": ["Client"],
        "summary": "Create a new client",
        "requestBody": {
          "description": "New client details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClient"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "get": {
        "tags": ["Client"],
        "summary": "List all clients",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/clients/{cpf}": {
      "get": {
        "tags": ["Client"],
        "summary": "Get client by cpf",
        "description": "Get client by cpf",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Client cpf"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a new category",
        "requestBody": {
          "description": "New category details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditCategory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "List all categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "$ref": "#/components/schemas/Categories"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{id}": {
      "patch": {
        "tags": ["Category"],
        "summary": "Edit an existing category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category id"
          }
        ],
        "requestBody": {
          "description": "Edit an existing category",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditCategory"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Product edited successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/api/products": {
      "post": {
        "tags": ["Product"],
        "summary": "Create a new product",
        "requestBody": {
          "description": "New product details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditProduct"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "get": {
        "tags": ["Product"],
        "summary": "List all products",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "$ref": "#/components/schemas/ListProductsByCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/products/category/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "List products by category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "$ref": "#/components/schemas/ListProductsByCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Find product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ListProductsByCategory"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Product"],
        "summary": "Edit an existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "product ID"
          }
        ],
        "requestBody": {
          "description": "Edit an existing product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditProduct"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Product edited successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete a existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product Id"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "tags": ["Order"],
        "summary": "Create a new order",
        "requestBody": {
          "description": "New order details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "get": {
        "tags": ["Order"],
        "summary": "List orders",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": ["Order"],
        "summary": "List orders by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type":"array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Order"],
        "summary": "Edit an existing product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order id"
          }
        ],
        "requestBody": {
          "description": "Edit an existing order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Product edited successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "delete": {
        "tags": ["Order"],
        "summary": "Delete a existing order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order Id"
          }
        ],
        "responses": {
          "204": {
            "description": "Order deleted successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateClient": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Cacau"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "dedyannacacau@gmail.com"
          },
          "cpf": {
            "type": "string",
            "example": "23487654398"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Cacau"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "dedyannacacau@gmail.com"
          },
          "cpf": {
            "type": "string",
            "example": "23487654398"
          }
        }
      },
      "CreateEditCategory": {
         "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Snack"
          },
          "description": {
            "type": "string",
            "example": "Combos or singles"
          }
        }
      },
      "Categories": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Snack"
          }
        }
      },
      "ListProductsByCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Nbs Bacon Cheese"
          },
          "description": {
            "type": "string",
            "example": "Sanduba com pão artesanal brioche, burger bovino 150g, queijo cheddar, bacon e 2 (duas) opções de molho"
          },
          "price": {
            "type": "string",
            "example": 26.99
          },
          "categoryName": {
            "type": "string",
            "example": "Snack"
          }
        }
      },
      "CreateEditProduct":{
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Nbs Bacon Cheese"
          },
          "description": {
            "type": "string",
            "example": "Sanduba com pão artesanal brioche, burger bovino 150g, queijo cheddar, bacon e 2 (duas) opções de molho"
          },
          "price": {
            "type": "number",
            "example": 26.99
          },
          "categoryId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateOrder": {
        "type": "object",
        "properties": {
          "products":{
            "type":"array",
            "items": {
              "type": "string"
            }
          },
          "clientId": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "client": {
            "type": "string",
            "example": "Cacau"
          },
          "snack": {
            "type":"array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string",
                  "example": "Nbs Bacon Cheese"
                },
                "description": {
                  "type": "string",
                  "example": "Sanduba com pão artesanal brioche, burger bovino 150g, queijo cheddar, bacon e 2 (duas) opções de molho"
                },
                "price": {
                  "type": "number",
                  "format": "float",
                  "example": 26.99
                }
              }
            }
          },
          "accompaniment": {
            "type":"array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string",
                  "example": "Batata Rústica"
                },
                 "description": {
                  "type": "string",
                  "example": "Batata rústica tamanho grande, com acompanhamento de um molho especial da casa a sua escolha"
                },
                "price": {
                  "type": "number",
                  "format": "float",
                  "example": 17.00
                }
              }
            }
          },
          "drink": {
            "type":"array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string",
                  "example": "Coca Cola"
                },
                 "description": {
                  "type": "string",
                  "example": "Lata 350ml"
                },
                "price": {
                  "type": "number",
                  "format": "float",
                  "example": 7
                }
              }
            }
          },
          "status": {
            "$ref": "#/components/schemas/PedidoStatus"
          },
          "total": {
            "type": "number",
            "example": 50.99
          }
        }
      },
      "PedidoStatus": {
        "type": "string",
        "enum": ["EM_PREPARACAO", "PRONTO", "RECEBIDO", "FINALIZADO"]
      }
    }
  }
}
